---
import Layout from "../components/layout.astro";
import Nav from "../components/nav.astro";
import Heading from "fulldev-ui/components/Heading.astro";
import { getUser } from "../utils/supabaseServer";
import { accessTokenName, refreshTokenName } from "../utils/config";
import { getCldImageUrl } from "astro-cloudinary/helpers";

export const cloudName = import.meta.env.PUBLIC_CLOUDINARY_CLOUD_NAME;

const accessToken = Astro.cookies.get(accessTokenName)?.value;
const refreshToken = Astro.cookies.get(refreshTokenName)?.value;

const userData = await getUser({ accessToken, refreshToken });

// the profile page is private
if (!userData) {
    return Astro.redirect("/login");
}

let url = getCldImageUrl({
    src: userData.id,
    crop: {
        type: "fill",
        source: true,
    },
    replaceBackground: "pumpkins and ghosts",
});
console.log(url);

async function verifyUrl(imageUrl: string | URL | Request) {
    try {
        const response = await fetch(imageUrl);

        // Verificamos el c칩digo de estado
        if (response.ok) {
            console.log("URL v치lida:", imageUrl);
        } else if (response.status === 404) {
            // console.log("Imagen no encontrada. URL inv치lida:", imageUrl);
            const formData = new FormData();
            formData.append("file", userData?.user_metadata.avatar_url);
            formData.append("upload_preset", "ml_default");
            if (userData && typeof userData.id === "string") {
                formData.append("public_id", userData.id);
            } else {
                console.error(
                    "User data is not defined or user ID is not a valid string.",
                );
            }

            const response = await fetch(
                `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,
                {
                    method: "POST",
                    body: formData,
                },
            );

            const data = await response.json();
            // console.log(data);
            url = data.url;
        } else {
            console.log("Error al verificar la URL:", response.status);
        }
    } catch (error) {
        console.error("Error al intentar acceder a la URL:", error);
    }
}

// Llamamos a la funci칩n para verificar la URL
verifyUrl(url);
---

<Layout title="Profile" isLoggedIn={true}>
    <Nav activeUrl="profile" isLoggedIn={true} />

    <Heading color="brand" contrast={false}>Profile</Heading>
    <form>
        <input type="hidden" id="id" name="id" value={userData.id} />
        <input
            type="hidden"
            id="avatar_url"
            name="avatar_url"
            value={userData.avatar_url}
        />
        <div style="width: 300px;">
            <two-up>
                <img id="avatar-image" src={url} />
                <img
                    id="original-image"
                    src={userData.user_metadata.avatar_url}
                />
            </two-up>
        </div>

        <div class="input-wrap">
            <label for="email">email:</label>
            <p>{userData.email}</p>
        </div>
        <div class="input-wrap">
            <label for="username">username:</label>
            <p>{userData.user_metadata.user_name}</p>
        </div>
        <div class="input-wrap">
            <label for="website">full-name:</label>
            <p>{userData.user_metadata.full_name}</p>
        </div>
    </form>
</Layout>
<script>
    import "two-up-element";
</script>
<style>
    .input-wrap {
        display: flex;
        height: 2rem;
        gap: 0.5rem;
        padding: 0.3rem 0;
        align-items: center;
        width: 30vw;
        flex: 1;
    }
    img {
        width: 300px;
    }
</style>
